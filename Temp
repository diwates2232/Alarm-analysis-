// src/components/AlarmCard.js
import React from 'react';
import { Card, CardContent, Typography, Grid } from '@mui/material';

export default function AlarmCard({ summary, rawAlarms, filters }) {
  if (!summary) return null;

  // helper to extract short month from date string (e.g. "Apr")
  const getMonth = dateStr =>
    new Date(dateStr).toLocaleString('en-US', { month: 'short' });

  // 1) apply all filters (region, location, month, priority)
  const filtered = rawAlarms.filter(a => {
    if (filters.region   && a.Region   !== filters.region)                         return false;
    if (filters.location && a.Location !== filters.location)                       return false;
    if (filters.month    && getMonth(a.Date) !== filters.month)                   return false;
    if (filters.priority && a['CCURE Incident Priority'] !== filters.priority)     return false;
    return true;
  });

  const totalAlarms = filtered.length;

  // normalize helper
  const normalize = str => (str || '').toString().trim().toLowerCase();

  // 2) counts per your rules
  const responseSentCount = filtered.filter(a =>
    normalize(a['If Reoccured Yes/No']) === 'no' &&
    normalize(a['Action Taken']) === 'response sent'
  ).length;

  const notSentCount = filtered.filter(a =>
    normalize(a['If Reoccured Yes/No']) === 'no' &&
    normalize(a['Action Taken']) === 'not sent'
  ).length;

  const reoccurredCount = filtered.filter(a =>
    normalize(a['If Reoccured Yes/No']) === 'yes' &&
    normalize(a['Action Taken']) === 'reoccured'
  ).length;

  const responseSentPercentage = totalAlarms
    ? `${((responseSentCount / totalAlarms) * 100).toFixed(2)}%`
    : '0%';

  return (
    <Grid container spacing={2} sx={{ mb: 3 }}>
      {/* Total Alarms */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Total Alarms</Typography>
            <Typography variant="h4">{totalAlarms}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Response Sent */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Response Sent</Typography>
            <Typography variant="h4">{responseSentCount}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Not Sent */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Not Sent</Typography>
            <Typography variant="h4">{notSentCount}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Re-occurred */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Re-occurred</Typography>
            <Typography variant="h4">{reoccurredCount}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Response Sent % */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Response Sent %</Typography>
            <Typography variant="h4">{responseSentPercentage}</Typography>
          </CardContent>
        </Card>
      </Grid>
    </Grid>
  );
}
















// src/components/AlarmCard.js
import React from 'react';
import { Card, CardContent, Typography, Grid } from '@mui/material';


export default function AlarmCard({ summary, rawAlarms, filters }) {
  if (!summary) return null;

 // 1) apply all filters (region, location, month, priority)
  const filtered = rawAlarms.filter(a => {
    if (filters.region   && a.Region   !== filters.region)                             return false;
    if (filters.location && a.Location !== filters.location)                           return false;
    // if (filters.month    && a.Month    !== filters.month)                              return false;
    
    if (filters.priority && a['CCURE Incident Priority'] !== filters.priority)         return false;
    return true;
  });


  const totalAlarms = filtered.length;

  // normalize helper
  const normalize = str => (str || '').toString().trim().toLowerCase();

  // 2) counts per your rules
  const responseSentCount = filtered.filter(a =>
    normalize(a['If Reoccured Yes/No']) === 'no' &&
    normalize(a['Action Taken']) === 'response sent'
  ).length;

  const notSentCount = filtered.filter(a =>
    normalize(a['If Reoccured Yes/No']) === 'no' &&
    normalize(a['Action Taken']) === 'not sent'
  ).length;

  const reoccurredCount = filtered.filter(a =>
    normalize(a['If Reoccured Yes/No']) === 'yes' &&
    normalize(a['Action Taken']) === 'reoccured'
  ).length;

  const responseSentPercentage = totalAlarms
    ? `${((responseSentCount / totalAlarms) * 100).toFixed(2)}%`
    : '0%';

  return (
    <Grid container spacing={2} sx={{ mb: 3 }}>
      {/* Total Alarms */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Total Alarms</Typography>
            <Typography variant="h4">{totalAlarms}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Response Sent */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Response Sent</Typography>
            <Typography variant="h4">{responseSentCount}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Not Sent */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Not Sent</Typography>
            <Typography variant="h4">{notSentCount}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Re-occurred */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Re-occurred</Typography>
            <Typography variant="h4">{reoccurredCount}</Typography>
          </CardContent>
        </Card>
      </Grid>

      {/* Response Sent % */}
      <Grid item xs={12} sm={6} md={2}>
        <Card>
          <CardContent>
            <Typography variant="subtitle1">Response Sent %</Typography>
            <Typography variant="h4">{responseSentPercentage}</Typography>
          </CardContent>
        </Card>
      </Grid>
    </Grid>
  );
}







