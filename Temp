Now i want to make Summary section like this.

Global - (APAC + EMEA + LACA + NAMER)  Total Number of Alarm Occured.
then Countand percentage of alarm ffor  specific Region wise - APAC, EMAEA, LACA, NAMEER
ALARM by rejection type - Count and percentage 
Alarm Prority - Count and Percentage of Alarm for High , Medium , Low
Then same for Specific Location.

Also make a summary for GSOC Operator Who Attend alarm count and Percentage for GSOC Operator Who attend alarm .
also percentage of Responce sent .When Alarm occured.
also make a make summary for Month wise count and percentage 


Read below my backend details and update files as per my request .First Update for only summary
then we will discuss about improvment for raw data



alarmController.js

const { loadExcelData } = require('../services/excelService');

const getAlarmSummary = (req, res) => {
    const data = loadExcelData();

    const summary = {
        totalAlarms: data.length,
        alarmsByRegion: {},
        alarmsBySeverity: {},
        reoccurredCount: 0
    };

    data.forEach(row => {
        const region = row['Region'] || 'Unknown';
        const severity = row['CCURE Incident Level'] || 'Unknown';
        const reoccurred = row['If Reoccurred (Yes/No)'] === 'Yes';

        summary.alarmsByRegion[region] = (summary.alarmsByRegion[region] || 0) + 1;
        summary.alarmsBySeverity[severity] = (summary.alarmsBySeverity[severity] || 0) + 1;

        if (reoccurred) summary.reoccurredCount++;
    });

    res.json(summary);
};

const getRawAlarms = (req, res) => {
    const data = loadExcelData();
    res.json(data);
};

module.exports = {
    getAlarmSummary,
    getRawAlarms
};






alarmRoutes.js


const { loadExcelData } = require('../services/excelService');

const getAlarmSummary = (req, res) => {
    const data = loadExcelData();

    const summary = {
        totalAlarms: data.length,
        alarmsByRegion: {},
        alarmsBySeverity: {},
        reoccurredCount: 0
    };

    data.forEach(row => {
        const region = row['Region'] || 'Unknown';
        const severity = row['CCURE Incident Level'] || 'Unknown';
        const reoccurred = row['If Reoccurred (Yes/No)'] === 'Yes';

        summary.alarmsByRegion[region] = (summary.alarmsByRegion[region] || 0) + 1;
        summary.alarmsBySeverity[severity] = (summary.alarmsBySeverity[severity] || 0) + 1;

        if (reoccurred) summary.reoccurredCount++;
    });

    res.json(summary);
};

const getRawAlarms = (req, res) => {
    const data = loadExcelData();
    res.json(data);
};

module.exports = {
    getAlarmSummary,
    getRawAlarms
};




excelService.js

const xlsx = require('xlsx');
const path = require('path');

function loadExcelData() {
    const filePath = path.join(__dirname, '../data/Alarms.xlsx');
    const workbook = xlsx.readFile('./data/Alarms.xlsx');
    const sheet = workbook.Sheets[workbook.SheetNames[0]];
    return xlsx.utils.sheet_to_json(sheet);
}

module.exports = {
    loadExcelData
};





Server.js

const express = require('express');
const cors = require('cors');
const alarmRoutes = require('./routes/alarmRoutes');

const app = express();
const PORT = 3000;

app.use(cors());
app.use('/api/alarms', alarmRoutes);

app.listen(PORT, () => {
    console.log(`Server is running at http://localhost:${PORT}`);
});
